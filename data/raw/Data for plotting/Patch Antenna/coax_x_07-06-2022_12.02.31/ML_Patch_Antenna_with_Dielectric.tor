antenna_coor_sys  coor_sys  
(
)
 
single_frequencies  frequency  
(
  frequency_list   : sequence(2.0 GHz)
)
 
ground_plane_inner  arbitrary_plate  
(
  coor_sys         : ref(antenna_coor_sys),
  rim              : ref(patch_rim),
  holes            : sequence(ref(hole_for_outer_coax))
)
 
field_cut_coor_sys  coor_sys  
(
)
 
single_cut  spherical_cut  
(
  coor_sys         : ref(field_cut_coor_sys),
  theta_range      : struct(start: -180.0, end: 180.0, np: 361),
  phi_range        : struct(start: 0.0, end: 90.0, np: 3),
  frequency        : ref(single_frequencies)
)
 
ground_plane_outer_rim  rectangular_rim  
(
  side_lengths     : struct(x: "ref(substrate_width_x)" mm, y: "ref(substrate_width_y)" mm)
)
 
hole_for_outer_coax  elliptical_rim  
(
  centre           : struct(x: "ref(coax_placement_x)" mm, y: "ref(coax_placement_y)" mm),
  half_axis        : struct(x: "ref(coax_outer_radius)" mm, y: "ref(coax_outer_radius)" mm)
)
 
patch_coor_sys  coor_sys  
(
  origin           : struct(x: 0.0 mm, y: 0.0 mm, z: "ref(substrate_height)" mm),
  base             : ref(antenna_coor_sys)
)
 
patch_inner  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(patch_inner_rim),
  holes            : sequence(ref(hole_for_probe))
)
 
coax_coor_sys  coor_sys  
(
  origin           : struct(x: "ref(coax_placement_x)" mm, y: "ref(coax_placement_y)" mm, z: 0.0 mm),
  base             : ref(antenna_coor_sys)
)
 
patch_coax_closure  piecewise_linear_bor  
(
  coor_sys         : ref(coax_coor_sys),
  length_unit      : mm,
  nodes            : table
    (
    "ref(substrate_height)"    0.00000E+00  
    "ref(substrate_height)"  "ref(coax_probe_radius)"  
    )
)
 
coax_backing  piecewise_linear_bor  
(
  coor_sys         : ref(coax_coor_sys),
  length_unit      : mm,
  nodes            : table
    (
     -2.00000E+00    0.00000E+00  
     -2.00000E+00  "ref(coax_outer_radius)"  
      0.00000E+00  "ref(coax_outer_radius)"  
    )
)
 
coaxial_waveguide_mode  coaxial_waveguide_mode  
(
  m_index          : 1,
  n_index          : 1
)
 
circular_waveguide_port_modal_expansion_settings  circular_waveguide_port_modal_expansion_settings  
(
  m_min            : 0,
  n_max            : 2,
  m_max            : 2
)
 
mom_waveguide_excitation  mom_waveguide_excitation  
(
  excitations      : sequence
    (    struct(waveguide_port: ref(port_01), waveguide_mode: ref(coaxial_waveguide_mode), amplitude: 1.0, 
phase: 0.0)
    )
)
 
mom  mom  
(
  frequency        : ref(single_frequencies),
  scatterer        : ref(patch_antenna),
  expansion_accuracy : enhanced,
  max_mesh_length  : 0.2,
  iterative_solution : struct(use_mlfmm: automatic, relative_error: 0.1E-02, mlfmm_use_disk: off, 
mlfmm_precision: normal, preconditioner_accuracy: normal, obsolete_group_size: 0.0, rhs_compression: on),
  waveguide_ports  : sequence
    (    struct(waveguide_port: ref(port_01), coor_sys: ref(coax_coor_sys), x: 0.0 mm, y: 0.0 mm, z: 0.0 mm, 
normal: Z-axis)
    ),
  interbody_coupling : on
)
 
port_01  coaxial_waveguide_port  
(
  radius           : "ref(coax_outer_radius)" mm,
  inner_radius     : "ref(coax_probe_radius)" mm,
  port_expansion_settings : ref(circular_waveguide_port_modal_expansion_settings)
)
 
hole_for_probe  elliptical_rim  
(
  centre           : struct(x: "ref(coax_placement_x)" mm, y: "ref(coax_placement_y)" mm),
  half_axis        : struct(x: "ref(coax_probe_radius)" mm, y: "ref(coax_probe_radius)" mm)
)
 
patch_rim  rectangular_rim  
(
  side_lengths     : struct(x: "ref(patch_width_x)" mm, y: "ref(patch_width_y)" mm)
)
 
dielectric_sides  box  
(
  coor_sys         : ref(antenna_coor_sys),
  x_length         : "ref(substrate_width_x)" mm,
  y_length         : "ref(substrate_width_y)" mm,
  z_length         : "ref(substrate_height)" mm,
  centre           : struct(x: 0.0 mm, y: 0.0 mm, z: "ref(substrate_height)/2" mm),
  exclude_faces    : sequence(z_min,z_max)
)
 
dielectric_top  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(ground_plane_outer_rim),
  holes            : sequence(ref(patch_outer_rim))
)
 
probe  piecewise_linear_bor  
(
  coor_sys         : ref(coax_coor_sys),
  length_unit      : mm,
  nodes            : table
    (
    "ref(substrate_height)"  "ref(coax_probe_radius)"  
      0.00000E+00  "ref(coax_probe_radius)"  
    )
)
 
patch_antenna  composite_mom_scatterer  
(
  regions          : table
    (
        1  "ref(substrate_permittivity)"    1.00000E+00    0.00000E+00    0.00000E+00  
    ),
  geometrical_parts : sequence
    (    struct(scatterer: ref(patch), region_1: 0, region_2: 1, zs_real: 0.0, zs_imag: 0.0, 
local_properties: none),
    struct(scatterer: ref(dielectric_layer), region_1: 0, region_2: 1, zs_real: -1.0, zs_imag: 0.0, 
local_properties: none),
    struct(scatterer: ref(ground_plane), region_1: 0, region_2: 1, zs_real: 0.0, zs_imag: 0.0, 
local_properties: none),
    struct(scatterer: ref(coax_backing), region_1: 0, region_2: -1, zs_real: 0.0, zs_imag: 0.0, 
local_properties: none),
    struct(scatterer: ref(probe), region_1: 1, region_2: -1, zs_real: 0.0, zs_imag: 0.0, local_properties: 
none),
    struct(scatterer: ref(patch_coax_closure), region_1: 0, region_2: -1, zs_real: 0.0, zs_imag: 0.0, 
local_properties: none),
    struct(scatterer: ref(waveguide_port_closure), region_1: 1, region_2: -1, zs_real: 0.0, zs_imag: 0.0, 
local_properties: none)
    )
)
 
waveguide_port_closure  piecewise_linear_bor  
(
  coor_sys         : ref(coax_coor_sys),
  length_unit      : mm,
  nodes            : table
    (
      0.00000E+00  "ref(coax_probe_radius)"  
      0.00000E+00  "ref(coax_outer_radius)"  
    )
)
 
patch_inner_rim  rectangular_rim  
(
  side_lengths     : struct(x: "ref(patch_width_x)-2*ref(edge_width)" mm, y: 
"ref(patch_width_y)-2*ref(edge_width)" mm)
)
 
patch_outer_rim  rectangular_rim  
(
  side_lengths     : struct(x: "ref(patch_width_x)+2*ref(edge_width)" mm, y: 
"ref(patch_width_y)+2*ref(edge_width)" mm)
)
 
edge_width  real_variable  
(
  value            : 1.0
)
 
patch_width_x  real_variable  
(
  value            : 41.55
)
 
patch_width_y  real_variable  
(
  value            : 41.55
)
 
ground_plane_outer  arbitrary_plate  
(
  coor_sys         : ref(antenna_coor_sys),
  rim              : ref(ground_plane_outer_rim),
  holes            : sequence(ref(patch_rim))
)
 
ground_plane  scatterer_cluster  
(
  scatterers       : sequence(ref(ground_plane_inner),ref(ground_plane_outer))
)
 
substrate_height  real_variable  
(
  value            : 3.0
)
 
patch_edge_1_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2"  "ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "ref(patch_width_y)/2-ref(edge_width)"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "-(ref(patch_width_y)/2-ref(edge_width))"  
    )
)
 
patch_edge_1  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(patch_edge_1_rim)
)
 
patch_edge_2_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "-ref(patch_width_y)/2+ref(edge_width)"  
    "ref(patch_width_x)/2-ref(edge_width)"  "-ref(patch_width_y)/2+ref(edge_width)"  
    "ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    )
)
 
patch_edge_2  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(patch_edge_2_rim)
)
 
patch_edge_3_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2"  "ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "ref(patch_width_y)/2-ref(edge_width)"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "-(ref(patch_width_y)/2-ref(edge_width))"  
    ),
  rotation         : 180.0
)
 
patch_edge_3  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(patch_edge_3_rim)
)
 
patch_edge_4_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2+ref(edge_width)"  "-ref(patch_width_y)/2+ref(edge_width)"  
    "ref(patch_width_x)/2-ref(edge_width)"  "-ref(patch_width_y)/2+ref(edge_width)"  
    "ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    ),
  rotation         : 180.0
)
 
patch_edge_4  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(patch_edge_4_rim)
)
 
dielectric_edge_1_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2"  "ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "ref(patch_width_y)/2+ref(edge_width)"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "-(ref(patch_width_y)/2+ref(edge_width))"  
    )
)
 
dielectric_edge_1  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(dielectric_edge_1_rim)
)
 
dielectric_edge_2_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "ref(patch_width_x)/2+ref(edge_width)"  "-ref(patch_width_y)/2-ref(edge_width)"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "-ref(patch_width_y)/2-ref(edge_width)"  
    )
)
 
dielectric_edge_3_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2"  "ref(patch_width_y)/2"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "ref(patch_width_y)/2+ref(edge_width)"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "-(ref(patch_width_y)/2+ref(edge_width))"  
    ),
  rotation         : 180.0
)
 
dielectric_edge_4_rim  polygonal_rim  
(
  length_unit      : mm,
  nodes            : table
    (
    "-ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "ref(patch_width_x)/2"  "-ref(patch_width_y)/2"  
    "ref(patch_width_x)/2+ref(edge_width)"  "-ref(patch_width_y)/2-ref(edge_width)"  
    "-ref(patch_width_x)/2-ref(edge_width)"  "-ref(patch_width_y)/2-ref(edge_width)"  
    ),
  rotation         : 180.0
)
 
dielectric_edge_2  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(dielectric_edge_2_rim)
)
 
dielectric_edge_3  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(dielectric_edge_3_rim)
)
 
dielectric_edge_4  arbitrary_plate  
(
  coor_sys         : ref(patch_coor_sys),
  rim              : ref(dielectric_edge_4_rim)
)
 
dielectric_layer  scatterer_cluster  
(
  scatterers       : sequence(ref(dielectric_top),ref(dielectric_sides),ref(dielectric_edge_1),
ref(dielectric_edge_2),ref(dielectric_edge_3),ref(dielectric_edge_4))
)
 
substrate_width_x  real_variable  
(
  value            : 70.0
)
 
substrate_width_y  real_variable  
(
  value            : 70.0
)
 
coax_placement_x  real_variable  
(
  value            : 0.0
)
 
coax_placement_y  real_variable  
(
  value            : 7.14
)
 
coax_probe_radius  real_variable  
(
  value            : 1.0
)
 
coax_outer_radius  real_variable  
(
  value            : 2.25
)
 
patch  scatterer_cluster  
(
  scatterers       : sequence(ref(patch_inner),ref(patch_edge_1),ref(patch_edge_2),ref(patch_edge_3),
ref(patch_edge_4))
)
 
substrate_permittivity  real_variable  
(
  value            : 3.0
)
 
//DO NOT MODIFY OBJECTS BELOW THIS LINE.
//THESE OBJECTS ARE CREATED AND MANAGED BY THE
//GRAPHICAL USER INTERFACE AND SHOULD NOT BE
//MODIFIED MANUALLY!
view_1  view  
(
  objects          : sequence(ref(view_1_coor_sys_plot),ref(view_1_output_points_plot),ref(view_1_bor_plot),
ref(view_1_mom_source_plot),ref(view_1_mom_plot),ref(view_1_box_plot),ref(arbitrary_plate_plot_for_view_1)),
  show_hide        : struct(reflectors: show, coordinate_systems: hide, feeds: hide, output_points: hide, 
struts: hide, tabulated_meshes: hide, boxes: show, plates: show, wires: hide, radiating_devices: show, 
mom_meshes: show, apertures_in_screen: hide, lenses: hide, tabulated_planar_sources: hide, plane_waves: hide, 
dgr_intercostals: hide, cad_files: hide, rooftop_mirrors: hide, loads: hide, bors: show, mom_sources: hide, 
quasi_periodic_surfaces: hide, ellipsoids: show)
)
 
view_1_coor_sys_plot  coor_sys_plot  
(
)
 
view_1_output_points_plot  output_points_plot  
(
)
 
view_1_bor_plot  bor_plot  
(
)
 
view_1_mom_source_plot  mom_source_plot  
(
)
 
view_1_mom_plot  mom_plot  
(
)
 
view_1_box_plot  box_plot  
(
)
 
arbitrary_plate_plot_for_view_1  arbitrary_plate_plot  
(
)
 
 //$$ Saved at 10:08:26 on 01.03.2022 by TICRA Tools 22.0 SN=009220
  
